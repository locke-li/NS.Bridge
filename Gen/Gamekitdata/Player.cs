// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gamekitdata/player.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gamekitdata {

  /// <summary>Holder for reflection information generated from gamekitdata/player.proto</summary>
  public static partial class PlayerReflection {

    #region Descriptor
    /// <summary>File descriptor for gamekitdata/player.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhnYW1la2l0ZGF0YS9wbGF5ZXIucHJvdG8SC2dhbWVraXRkYXRhImkKD1Bs",
            "YXllckRhdGFTdGF0ZRIMCgRjb2luGAEgASgNEgwKBGxpa2UYAiABKA0SDwoH",
            "ZGlhbW9uZBgDIAEoDRIUCgxMYXN0T25saW5lVHMYEyABKAMSEwoLRGF0YVZl",
            "cnNpb24YFCABKAVCQVo/Yml0YnVja2V0Lm9yZy9mdW5wbHVzL3Nob3BwaW5n",
            "LW1hbGwtZGF0YS9nZW4vZ29sYW5nL2dhbWVraXRkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gamekitdata.PlayerDataState), global::Gamekitdata.PlayerDataState.Parser, new[]{ "Coin", "Like", "Diamond", "LastOnlineTs", "DataVersion" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerDataState : pb::IMessage<PlayerDataState> {
    private static readonly pb::MessageParser<PlayerDataState> _parser = new pb::MessageParser<PlayerDataState>(() => new PlayerDataState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerDataState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gamekitdata.PlayerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDataState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDataState(PlayerDataState other) : this() {
      coin_ = other.coin_;
      like_ = other.like_;
      diamond_ = other.diamond_;
      lastOnlineTs_ = other.lastOnlineTs_;
      dataVersion_ = other.dataVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerDataState Clone() {
      return new PlayerDataState(this);
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 1;
    private uint coin_;
    /// <summary>
    ///游戏内基础货币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "like" field.</summary>
    public const int LikeFieldNumber = 2;
    private uint like_;
    /// <summary>
    ///点赞币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Like {
      get { return like_; }
      set {
        like_ = value;
      }
    }

    /// <summary>Field number for the "diamond" field.</summary>
    public const int DiamondFieldNumber = 3;
    private uint diamond_;
    /// <summary>
    ///内购货币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "LastOnlineTs" field.</summary>
    public const int LastOnlineTsFieldNumber = 19;
    private long lastOnlineTs_;
    /// <summary>
    ///上次在线时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastOnlineTs {
      get { return lastOnlineTs_; }
      set {
        lastOnlineTs_ = value;
      }
    }

    /// <summary>Field number for the "DataVersion" field.</summary>
    public const int DataVersionFieldNumber = 20;
    private int dataVersion_;
    /// <summary>
    ///backend
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DataVersion {
      get { return dataVersion_; }
      set {
        dataVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerDataState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerDataState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Coin != other.Coin) return false;
      if (Like != other.Like) return false;
      if (Diamond != other.Diamond) return false;
      if (LastOnlineTs != other.LastOnlineTs) return false;
      if (DataVersion != other.DataVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Coin != 0) hash ^= Coin.GetHashCode();
      if (Like != 0) hash ^= Like.GetHashCode();
      if (Diamond != 0) hash ^= Diamond.GetHashCode();
      if (LastOnlineTs != 0L) hash ^= LastOnlineTs.GetHashCode();
      if (DataVersion != 0) hash ^= DataVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Coin != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Coin);
      }
      if (Like != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Like);
      }
      if (Diamond != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Diamond);
      }
      if (LastOnlineTs != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(LastOnlineTs);
      }
      if (DataVersion != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(DataVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Coin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Coin);
      }
      if (Like != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Like);
      }
      if (Diamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Diamond);
      }
      if (LastOnlineTs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastOnlineTs);
      }
      if (DataVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DataVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerDataState other) {
      if (other == null) {
        return;
      }
      if (other.Coin != 0) {
        Coin = other.Coin;
      }
      if (other.Like != 0) {
        Like = other.Like;
      }
      if (other.Diamond != 0) {
        Diamond = other.Diamond;
      }
      if (other.LastOnlineTs != 0L) {
        LastOnlineTs = other.LastOnlineTs;
      }
      if (other.DataVersion != 0) {
        DataVersion = other.DataVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Coin = input.ReadUInt32();
            break;
          }
          case 16: {
            Like = input.ReadUInt32();
            break;
          }
          case 24: {
            Diamond = input.ReadUInt32();
            break;
          }
          case 152: {
            LastOnlineTs = input.ReadInt64();
            break;
          }
          case 160: {
            DataVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
