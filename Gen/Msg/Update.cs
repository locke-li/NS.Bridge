// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg/update.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from msg/update.proto</summary>
  public static partial class UpdateReflection {

    #region Descriptor
    /// <summary>File descriptor for msg/update.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UpdateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBtc2cvdXBkYXRlLnByb3RvEgNtc2caFmdhbWVraXRkYXRhL2dhbWUucHJv",
            "dG8aFmdhbWVraXRkYXRhL21hbGwucHJvdG8aGWdhbWVraXRkYXRhL21pc3Np",
            "b24ucHJvdG8aGGdhbWVraXRkYXRhL3BsYXllci5wcm90bxobZ2FtZWtpdGRh",
            "dGEvcHJvbW90aW9uLnByb3RvIg0KC0Fja1Jlc3BvbnNlInIKEVVwZGF0ZVNo",
            "b3BSZXF1ZXN0Eg4KBm1hbGxJZBgBIAEoBRIfCgRzaG9wGAIgASgLMhEuZ2Ft",
            "ZWtpdGRhdGEuU2hvcBIsCgZwbGF5ZXIYAyABKAsyHC5nYW1la2l0ZGF0YS5Q",
            "bGF5ZXJEYXRhU3RhdGUicgoRVXBkYXRlQXJlYVJlcXVlc3QSDgoGbWFsbElk",
            "GAEgASgFEh8KBGFyZWEYAiABKAsyES5nYW1la2l0ZGF0YS5BcmVhEiwKBnBs",
            "YXllchgDIAEoCzIcLmdhbWVraXRkYXRhLlBsYXllckRhdGFTdGF0ZSI3ChJV",
            "cGRhdGVTdGFmZlJlcXVlc3QSIQoFc3RhZmYYASABKAsyEi5nYW1la2l0ZGF0",
            "YS5TdGFmZiJOChRVcGRhdGVNaXNzaW9uUmVxdWVzdBIlCgdtaXNzaW9uGAEg",
            "ASgLMhQuZ2FtZWtpdGRhdGEuTWlzc2lvbhIPCgdpc0NsYWltGAIgASgIIjMK",
            "FVVwZGF0ZVR1dG9yaWFsUmVxdWVzdBILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAkiQwoTVXBkYXRlUGxheWVyUmVxdWVzdBIsCgZwbGF5ZXIYASABKAsy",
            "HC5nYW1la2l0ZGF0YS5QbGF5ZXJEYXRhU3RhdGUiZgokVXBkYXRlQ29tcGxl",
            "dGlvbk1pc3Npb25SZWNvcmRSZXF1ZXN0Ej4KEGNvbXBsZXRpb25SZWNvcmQY",
            "ASABKAsyJC5nYW1la2l0ZGF0YS5Db21wbGV0aW9uTWlzc2lvblJlY29yZCJY",
            "ChZVcGRhdGVQcm9tb0J1ZmZSZXF1ZXN0EhMKC3Byb21vQnVmZklkGAEgASgF",
            "EikKCXByb21vQnVmZhgCIAEoCzIWLmdhbWVraXRkYXRhLlByb21vQnVmZiJZ",
            "Cg5SZWNydWl0UmVxdWVzdBIfCghjb3N0VHlwZRgBIAEoDjINLm1zZy5Db3N0",
            "VHlwZRIMCgRjb3N0GAIgASgFEhgKEFVwZGF0ZURheUJlZ2luVHMYAyABKAMi",
            "NAoPUmVjcnVpdFJlc3BvbnNlEiEKBXN0YWZmGAEgASgLMhIuZ2FtZWtpdGRh",
            "dGEuU3RhZmYqMQoIQ29zdFR5cGUSEAoMQ29zdFR5cGVMaWtlEAASEwoPQ29z",
            "dFR5cGVEaWFtb25kEAFCOVo3Yml0YnVja2V0Lm9yZy9mdW5wbHVzL3Nob3Bw",
            "aW5nLW1hbGwtZGF0YS9nZW4vZ29sYW5nL21zZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gamekitdata.GameReflection.Descriptor, global::Gamekitdata.MallReflection.Descriptor, global::Gamekitdata.MissionReflection.Descriptor, global::Gamekitdata.PlayerReflection.Descriptor, global::Gamekitdata.PromotionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Msg.CostType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.AckResponse), global::Msg.AckResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdateShopRequest), global::Msg.UpdateShopRequest.Parser, new[]{ "MallId", "Shop", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdateAreaRequest), global::Msg.UpdateAreaRequest.Parser, new[]{ "MallId", "Area", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdateStaffRequest), global::Msg.UpdateStaffRequest.Parser, new[]{ "Staff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdateMissionRequest), global::Msg.UpdateMissionRequest.Parser, new[]{ "Mission", "IsClaim" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdateTutorialRequest), global::Msg.UpdateTutorialRequest.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdatePlayerRequest), global::Msg.UpdatePlayerRequest.Parser, new[]{ "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdateCompletionMissionRecordRequest), global::Msg.UpdateCompletionMissionRecordRequest.Parser, new[]{ "CompletionRecord" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpdatePromoBuffRequest), global::Msg.UpdatePromoBuffRequest.Parser, new[]{ "PromoBuffId", "PromoBuff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RecruitRequest), global::Msg.RecruitRequest.Parser, new[]{ "CostType", "Cost", "UpdateDayBeginTs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RecruitResponse), global::Msg.RecruitResponse.Parser, new[]{ "Staff" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CostType {
    [pbr::OriginalName("CostTypeLike")] Like = 0,
    [pbr::OriginalName("CostTypeDiamond")] Diamond = 1,
  }

  #endregion

  #region Messages
  public sealed partial class AckResponse : pb::IMessage<AckResponse> {
    private static readonly pb::MessageParser<AckResponse> _parser = new pb::MessageParser<AckResponse>(() => new AckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckResponse(AckResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckResponse Clone() {
      return new AckResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateShopRequest : pb::IMessage<UpdateShopRequest> {
    private static readonly pb::MessageParser<UpdateShopRequest> _parser = new pb::MessageParser<UpdateShopRequest>(() => new UpdateShopRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateShopRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateShopRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateShopRequest(UpdateShopRequest other) : this() {
      mallId_ = other.mallId_;
      shop_ = other.shop_ != null ? other.shop_.Clone() : null;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateShopRequest Clone() {
      return new UpdateShopRequest(this);
    }

    /// <summary>Field number for the "mallId" field.</summary>
    public const int MallIdFieldNumber = 1;
    private int mallId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallId {
      get { return mallId_; }
      set {
        mallId_ = value;
      }
    }

    /// <summary>Field number for the "shop" field.</summary>
    public const int ShopFieldNumber = 2;
    private global::Gamekitdata.Shop shop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.Shop Shop {
      get { return shop_; }
      set {
        shop_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::Gamekitdata.PlayerDataState player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.PlayerDataState Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateShopRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateShopRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MallId != other.MallId) return false;
      if (!object.Equals(Shop, other.Shop)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MallId != 0) hash ^= MallId.GetHashCode();
      if (shop_ != null) hash ^= Shop.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MallId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MallId);
      }
      if (shop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Shop);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MallId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MallId);
      }
      if (shop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shop);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateShopRequest other) {
      if (other == null) {
        return;
      }
      if (other.MallId != 0) {
        MallId = other.MallId;
      }
      if (other.shop_ != null) {
        if (shop_ == null) {
          Shop = new global::Gamekitdata.Shop();
        }
        Shop.MergeFrom(other.Shop);
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Gamekitdata.PlayerDataState();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MallId = input.ReadInt32();
            break;
          }
          case 18: {
            if (shop_ == null) {
              Shop = new global::Gamekitdata.Shop();
            }
            input.ReadMessage(Shop);
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::Gamekitdata.PlayerDataState();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateAreaRequest : pb::IMessage<UpdateAreaRequest> {
    private static readonly pb::MessageParser<UpdateAreaRequest> _parser = new pb::MessageParser<UpdateAreaRequest>(() => new UpdateAreaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAreaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAreaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAreaRequest(UpdateAreaRequest other) : this() {
      mallId_ = other.mallId_;
      area_ = other.area_ != null ? other.area_.Clone() : null;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAreaRequest Clone() {
      return new UpdateAreaRequest(this);
    }

    /// <summary>Field number for the "mallId" field.</summary>
    public const int MallIdFieldNumber = 1;
    private int mallId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MallId {
      get { return mallId_; }
      set {
        mallId_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private global::Gamekitdata.Area area_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.Area Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::Gamekitdata.PlayerDataState player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.PlayerDataState Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAreaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAreaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MallId != other.MallId) return false;
      if (!object.Equals(Area, other.Area)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MallId != 0) hash ^= MallId.GetHashCode();
      if (area_ != null) hash ^= Area.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MallId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MallId);
      }
      if (area_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Area);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MallId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MallId);
      }
      if (area_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Area);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAreaRequest other) {
      if (other == null) {
        return;
      }
      if (other.MallId != 0) {
        MallId = other.MallId;
      }
      if (other.area_ != null) {
        if (area_ == null) {
          Area = new global::Gamekitdata.Area();
        }
        Area.MergeFrom(other.Area);
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Gamekitdata.PlayerDataState();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MallId = input.ReadInt32();
            break;
          }
          case 18: {
            if (area_ == null) {
              Area = new global::Gamekitdata.Area();
            }
            input.ReadMessage(Area);
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::Gamekitdata.PlayerDataState();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateStaffRequest : pb::IMessage<UpdateStaffRequest> {
    private static readonly pb::MessageParser<UpdateStaffRequest> _parser = new pb::MessageParser<UpdateStaffRequest>(() => new UpdateStaffRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateStaffRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStaffRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStaffRequest(UpdateStaffRequest other) : this() {
      staff_ = other.staff_ != null ? other.staff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStaffRequest Clone() {
      return new UpdateStaffRequest(this);
    }

    /// <summary>Field number for the "staff" field.</summary>
    public const int StaffFieldNumber = 1;
    private global::Gamekitdata.Staff staff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.Staff Staff {
      get { return staff_; }
      set {
        staff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateStaffRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateStaffRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Staff, other.Staff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (staff_ != null) hash ^= Staff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (staff_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Staff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (staff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Staff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateStaffRequest other) {
      if (other == null) {
        return;
      }
      if (other.staff_ != null) {
        if (staff_ == null) {
          Staff = new global::Gamekitdata.Staff();
        }
        Staff.MergeFrom(other.Staff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (staff_ == null) {
              Staff = new global::Gamekitdata.Staff();
            }
            input.ReadMessage(Staff);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateMissionRequest : pb::IMessage<UpdateMissionRequest> {
    private static readonly pb::MessageParser<UpdateMissionRequest> _parser = new pb::MessageParser<UpdateMissionRequest>(() => new UpdateMissionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMissionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMissionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMissionRequest(UpdateMissionRequest other) : this() {
      mission_ = other.mission_ != null ? other.mission_.Clone() : null;
      isClaim_ = other.isClaim_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMissionRequest Clone() {
      return new UpdateMissionRequest(this);
    }

    /// <summary>Field number for the "mission" field.</summary>
    public const int MissionFieldNumber = 1;
    private global::Gamekitdata.Mission mission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.Mission Mission {
      get { return mission_; }
      set {
        mission_ = value;
      }
    }

    /// <summary>Field number for the "isClaim" field.</summary>
    public const int IsClaimFieldNumber = 2;
    private bool isClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClaim {
      get { return isClaim_; }
      set {
        isClaim_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMissionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMissionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Mission, other.Mission)) return false;
      if (IsClaim != other.IsClaim) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mission_ != null) hash ^= Mission.GetHashCode();
      if (IsClaim != false) hash ^= IsClaim.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mission);
      }
      if (IsClaim != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsClaim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mission);
      }
      if (IsClaim != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMissionRequest other) {
      if (other == null) {
        return;
      }
      if (other.mission_ != null) {
        if (mission_ == null) {
          Mission = new global::Gamekitdata.Mission();
        }
        Mission.MergeFrom(other.Mission);
      }
      if (other.IsClaim != false) {
        IsClaim = other.IsClaim;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mission_ == null) {
              Mission = new global::Gamekitdata.Mission();
            }
            input.ReadMessage(Mission);
            break;
          }
          case 16: {
            IsClaim = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTutorialRequest : pb::IMessage<UpdateTutorialRequest> {
    private static readonly pb::MessageParser<UpdateTutorialRequest> _parser = new pb::MessageParser<UpdateTutorialRequest>(() => new UpdateTutorialRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTutorialRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTutorialRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTutorialRequest(UpdateTutorialRequest other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTutorialRequest Clone() {
      return new UpdateTutorialRequest(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTutorialRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTutorialRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTutorialRequest other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdatePlayerRequest : pb::IMessage<UpdatePlayerRequest> {
    private static readonly pb::MessageParser<UpdatePlayerRequest> _parser = new pb::MessageParser<UpdatePlayerRequest>(() => new UpdatePlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePlayerRequest(UpdatePlayerRequest other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePlayerRequest Clone() {
      return new UpdatePlayerRequest(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Gamekitdata.PlayerDataState player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.PlayerDataState Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Gamekitdata.PlayerDataState();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::Gamekitdata.PlayerDataState();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCompletionMissionRecordRequest : pb::IMessage<UpdateCompletionMissionRecordRequest> {
    private static readonly pb::MessageParser<UpdateCompletionMissionRecordRequest> _parser = new pb::MessageParser<UpdateCompletionMissionRecordRequest>(() => new UpdateCompletionMissionRecordRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCompletionMissionRecordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompletionMissionRecordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompletionMissionRecordRequest(UpdateCompletionMissionRecordRequest other) : this() {
      completionRecord_ = other.completionRecord_ != null ? other.completionRecord_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompletionMissionRecordRequest Clone() {
      return new UpdateCompletionMissionRecordRequest(this);
    }

    /// <summary>Field number for the "completionRecord" field.</summary>
    public const int CompletionRecordFieldNumber = 1;
    private global::Gamekitdata.CompletionMissionRecord completionRecord_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.CompletionMissionRecord CompletionRecord {
      get { return completionRecord_; }
      set {
        completionRecord_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCompletionMissionRecordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCompletionMissionRecordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompletionRecord, other.CompletionRecord)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (completionRecord_ != null) hash ^= CompletionRecord.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (completionRecord_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CompletionRecord);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (completionRecord_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletionRecord);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCompletionMissionRecordRequest other) {
      if (other == null) {
        return;
      }
      if (other.completionRecord_ != null) {
        if (completionRecord_ == null) {
          CompletionRecord = new global::Gamekitdata.CompletionMissionRecord();
        }
        CompletionRecord.MergeFrom(other.CompletionRecord);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (completionRecord_ == null) {
              CompletionRecord = new global::Gamekitdata.CompletionMissionRecord();
            }
            input.ReadMessage(CompletionRecord);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdatePromoBuffRequest : pb::IMessage<UpdatePromoBuffRequest> {
    private static readonly pb::MessageParser<UpdatePromoBuffRequest> _parser = new pb::MessageParser<UpdatePromoBuffRequest>(() => new UpdatePromoBuffRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePromoBuffRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePromoBuffRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePromoBuffRequest(UpdatePromoBuffRequest other) : this() {
      promoBuffId_ = other.promoBuffId_;
      promoBuff_ = other.promoBuff_ != null ? other.promoBuff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePromoBuffRequest Clone() {
      return new UpdatePromoBuffRequest(this);
    }

    /// <summary>Field number for the "promoBuffId" field.</summary>
    public const int PromoBuffIdFieldNumber = 1;
    private int promoBuffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PromoBuffId {
      get { return promoBuffId_; }
      set {
        promoBuffId_ = value;
      }
    }

    /// <summary>Field number for the "promoBuff" field.</summary>
    public const int PromoBuffFieldNumber = 2;
    private global::Gamekitdata.PromoBuff promoBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.PromoBuff PromoBuff {
      get { return promoBuff_; }
      set {
        promoBuff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePromoBuffRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePromoBuffRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PromoBuffId != other.PromoBuffId) return false;
      if (!object.Equals(PromoBuff, other.PromoBuff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PromoBuffId != 0) hash ^= PromoBuffId.GetHashCode();
      if (promoBuff_ != null) hash ^= PromoBuff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PromoBuffId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PromoBuffId);
      }
      if (promoBuff_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PromoBuff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PromoBuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PromoBuffId);
      }
      if (promoBuff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PromoBuff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePromoBuffRequest other) {
      if (other == null) {
        return;
      }
      if (other.PromoBuffId != 0) {
        PromoBuffId = other.PromoBuffId;
      }
      if (other.promoBuff_ != null) {
        if (promoBuff_ == null) {
          PromoBuff = new global::Gamekitdata.PromoBuff();
        }
        PromoBuff.MergeFrom(other.PromoBuff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PromoBuffId = input.ReadInt32();
            break;
          }
          case 18: {
            if (promoBuff_ == null) {
              PromoBuff = new global::Gamekitdata.PromoBuff();
            }
            input.ReadMessage(PromoBuff);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///抽卡
  /// </summary>
  public sealed partial class RecruitRequest : pb::IMessage<RecruitRequest> {
    private static readonly pb::MessageParser<RecruitRequest> _parser = new pb::MessageParser<RecruitRequest>(() => new RecruitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecruitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitRequest(RecruitRequest other) : this() {
      costType_ = other.costType_;
      cost_ = other.cost_;
      updateDayBeginTs_ = other.updateDayBeginTs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitRequest Clone() {
      return new RecruitRequest(this);
    }

    /// <summary>Field number for the "costType" field.</summary>
    public const int CostTypeFieldNumber = 1;
    private global::Msg.CostType costType_ = global::Msg.CostType.Like;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.CostType CostType {
      get { return costType_; }
      set {
        costType_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 2;
    private int cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "UpdateDayBeginTs" field.</summary>
    public const int UpdateDayBeginTsFieldNumber = 3;
    private long updateDayBeginTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdateDayBeginTs {
      get { return updateDayBeginTs_; }
      set {
        updateDayBeginTs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecruitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecruitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostType != other.CostType) return false;
      if (Cost != other.Cost) return false;
      if (UpdateDayBeginTs != other.UpdateDayBeginTs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostType != global::Msg.CostType.Like) hash ^= CostType.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (UpdateDayBeginTs != 0L) hash ^= UpdateDayBeginTs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostType != global::Msg.CostType.Like) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CostType);
      }
      if (Cost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cost);
      }
      if (UpdateDayBeginTs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UpdateDayBeginTs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostType != global::Msg.CostType.Like) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CostType);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (UpdateDayBeginTs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateDayBeginTs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecruitRequest other) {
      if (other == null) {
        return;
      }
      if (other.CostType != global::Msg.CostType.Like) {
        CostType = other.CostType;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.UpdateDayBeginTs != 0L) {
        UpdateDayBeginTs = other.UpdateDayBeginTs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CostType = (global::Msg.CostType) input.ReadEnum();
            break;
          }
          case 16: {
            Cost = input.ReadInt32();
            break;
          }
          case 24: {
            UpdateDayBeginTs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RecruitResponse : pb::IMessage<RecruitResponse> {
    private static readonly pb::MessageParser<RecruitResponse> _parser = new pb::MessageParser<RecruitResponse>(() => new RecruitResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecruitResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.UpdateReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitResponse(RecruitResponse other) : this() {
      staff_ = other.staff_ != null ? other.staff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecruitResponse Clone() {
      return new RecruitResponse(this);
    }

    /// <summary>Field number for the "staff" field.</summary>
    public const int StaffFieldNumber = 1;
    private global::Gamekitdata.Staff staff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.Staff Staff {
      get { return staff_; }
      set {
        staff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecruitResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecruitResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Staff, other.Staff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (staff_ != null) hash ^= Staff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (staff_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Staff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (staff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Staff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecruitResponse other) {
      if (other == null) {
        return;
      }
      if (other.staff_ != null) {
        if (staff_ == null) {
          Staff = new global::Gamekitdata.Staff();
        }
        Staff.MergeFrom(other.Staff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (staff_ == null) {
              Staff = new global::Gamekitdata.Staff();
            }
            input.ReadMessage(Staff);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
