// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata_exclude/StaffConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace rawdata {

  /// <summary>Holder for reflection information generated from rawdata_exclude/StaffConf.proto</summary>
  public static partial class StaffConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata_exclude/StaffConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StaffConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhX2V4Y2x1ZGUvU3RhZmZDb25mLnByb3RvEgdyYXdkYXRhIuQB",
            "CgVTdGFmZhIQCghzdGFmZl9pZBgBIAEoBRIbChNkaWFtb25kX3JlY3J1aXRf",
            "bnVtGAIgAygFEhIKCmV4dHJhX2l0ZW0YAyABKAUSFQoNZmF2b3JpdGVfc2hv",
            "cBgEIAMoBRIRCglmcmFnbWVudHMYCiADKAUSDgoGbGV2ZWxzGAsgAygFEhgK",
            "EGxpa2VfcmVjcnVpdF9udW0YBiADKAUSDAoEbmFtZRgHIAEoCRISCgpza2ls",
            "bF90eXBlGAggASgFEhQKDHNraWxsX3ZhbHVlcxgMIAMoAhIMCgRzdGFyGAkg",
            "ASgFIoABCglTdGFmZkNvbmYSMgoIU3RhZmZNYXAYASADKAsyIC5yYXdkYXRh",
            "LlN0YWZmQ29uZi5TdGFmZk1hcEVudHJ5Gj8KDVN0YWZmTWFwRW50cnkSCwoD",
            "a2V5GAEgASgFEh0KBXZhbHVlGAIgASgLMg4ucmF3ZGF0YS5TdGFmZjoCOAFC",
            "R1o7Yml0YnVja2V0Lm9yZy9mdW5wbHVzL3Nob3BwaW5nLW1hbGwtZGF0YS9n",
            "ZW4vZ29sYW5nL3Jhd2RhdGGqAgdyYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::rawdata.Staff), global::rawdata.Staff.Parser, new[]{ "StaffId", "DiamondRecruitNum", "ExtraItem", "FavoriteShop", "Fragments", "Levels", "LikeRecruitNum", "Name", "SkillType", "SkillValues", "Star" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::rawdata.StaffConf), global::rawdata.StaffConf.Parser, new[]{ "StaffMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Staff : pb::IMessage<Staff> {
    private static readonly pb::MessageParser<Staff> _parser = new pb::MessageParser<Staff>(() => new Staff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Staff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::rawdata.StaffConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Staff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Staff(Staff other) : this() {
      staffId_ = other.staffId_;
      diamondRecruitNum_ = other.diamondRecruitNum_.Clone();
      extraItem_ = other.extraItem_;
      favoriteShop_ = other.favoriteShop_.Clone();
      fragments_ = other.fragments_.Clone();
      levels_ = other.levels_.Clone();
      likeRecruitNum_ = other.likeRecruitNum_.Clone();
      name_ = other.name_;
      skillType_ = other.skillType_;
      skillValues_ = other.skillValues_.Clone();
      star_ = other.star_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Staff Clone() {
      return new Staff(this);
    }

    /// <summary>Field number for the "staff_id" field.</summary>
    public const int StaffIdFieldNumber = 1;
    private int staffId_;
    /// <summary>
    /// 店员id
    /// 1XXX=店员
    /// 15XX=全能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StaffId {
      get { return staffId_; }
      set {
        staffId_ = value;
      }
    }

    /// <summary>Field number for the "diamond_recruit_num" field.</summary>
    public const int DiamondRecruitNumFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_diamondRecruitNum_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> diamondRecruitNum_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最小值，最大值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DiamondRecruitNum {
      get { return diamondRecruitNum_; }
    }

    /// <summary>Field number for the "extra_item" field.</summary>
    public const int ExtraItemFieldNumber = 3;
    private int extraItem_;
    /// <summary>
    /// skill_type=15的店长增加的额外物品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraItem {
      get { return extraItem_; }
      set {
        extraItem_ = value;
      }
    }

    /// <summary>Field number for the "favorite_shop" field.</summary>
    public const int FavoriteShopFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_favoriteShop_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> favoriteShop_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 能够驻扎的店铺id
    /// client side using
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FavoriteShop {
      get { return favoriteShop_; }
    }

    /// <summary>Field number for the "fragments" field.</summary>
    public const int FragmentsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_fragments_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> fragments_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// npc各个等级需要的卡数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Fragments {
      get { return fragments_; }
    }

    /// <summary>Field number for the "levels" field.</summary>
    public const int LevelsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_levels_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> levels_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// npc等级数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Levels {
      get { return levels_; }
    }

    /// <summary>Field number for the "like_recruit_num" field.</summary>
    public const int LikeRecruitNumFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_likeRecruitNum_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> likeRecruitNum_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最小值，最大值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LikeRecruitNum {
      get { return likeRecruitNum_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// 店员名儿
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_type" field.</summary>
    public const int SkillTypeFieldNumber = 8;
    private int skillType_;
    /// <summary>
    /// https://docs.google.com/spreadsheets/d/1XDEMQYePz-E3SpLjHTLV0LOabngPXfrAIaSK5Sqgi04/edit#gid=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillType {
      get { return skillType_; }
      set {
        skillType_ = value;
      }
    }

    /// <summary>Field number for the "skill_values" field.</summary>
    public const int SkillValuesFieldNumber = 12;
    private static readonly pb::FieldCodec<float> _repeated_skillValues_codec
        = pb::FieldCodec.ForFloat(98);
    private readonly pbc::RepeatedField<float> skillValues_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// npc各个等级对应的技能数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> SkillValues {
      get { return skillValues_; }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 9;
    private int star_;
    /// <summary>
    /// 星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Staff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Staff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StaffId != other.StaffId) return false;
      if(!diamondRecruitNum_.Equals(other.diamondRecruitNum_)) return false;
      if (ExtraItem != other.ExtraItem) return false;
      if(!favoriteShop_.Equals(other.favoriteShop_)) return false;
      if(!fragments_.Equals(other.fragments_)) return false;
      if(!levels_.Equals(other.levels_)) return false;
      if(!likeRecruitNum_.Equals(other.likeRecruitNum_)) return false;
      if (Name != other.Name) return false;
      if (SkillType != other.SkillType) return false;
      if(!skillValues_.Equals(other.skillValues_)) return false;
      if (Star != other.Star) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StaffId != 0) hash ^= StaffId.GetHashCode();
      hash ^= diamondRecruitNum_.GetHashCode();
      if (ExtraItem != 0) hash ^= ExtraItem.GetHashCode();
      hash ^= favoriteShop_.GetHashCode();
      hash ^= fragments_.GetHashCode();
      hash ^= levels_.GetHashCode();
      hash ^= likeRecruitNum_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SkillType != 0) hash ^= SkillType.GetHashCode();
      hash ^= skillValues_.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StaffId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StaffId);
      }
      diamondRecruitNum_.WriteTo(output, _repeated_diamondRecruitNum_codec);
      if (ExtraItem != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ExtraItem);
      }
      favoriteShop_.WriteTo(output, _repeated_favoriteShop_codec);
      likeRecruitNum_.WriteTo(output, _repeated_likeRecruitNum_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (SkillType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SkillType);
      }
      if (Star != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Star);
      }
      fragments_.WriteTo(output, _repeated_fragments_codec);
      levels_.WriteTo(output, _repeated_levels_codec);
      skillValues_.WriteTo(output, _repeated_skillValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StaffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StaffId);
      }
      size += diamondRecruitNum_.CalculateSize(_repeated_diamondRecruitNum_codec);
      if (ExtraItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraItem);
      }
      size += favoriteShop_.CalculateSize(_repeated_favoriteShop_codec);
      size += fragments_.CalculateSize(_repeated_fragments_codec);
      size += levels_.CalculateSize(_repeated_levels_codec);
      size += likeRecruitNum_.CalculateSize(_repeated_likeRecruitNum_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SkillType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillType);
      }
      size += skillValues_.CalculateSize(_repeated_skillValues_codec);
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Staff other) {
      if (other == null) {
        return;
      }
      if (other.StaffId != 0) {
        StaffId = other.StaffId;
      }
      diamondRecruitNum_.Add(other.diamondRecruitNum_);
      if (other.ExtraItem != 0) {
        ExtraItem = other.ExtraItem;
      }
      favoriteShop_.Add(other.favoriteShop_);
      fragments_.Add(other.fragments_);
      levels_.Add(other.levels_);
      likeRecruitNum_.Add(other.likeRecruitNum_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SkillType != 0) {
        SkillType = other.SkillType;
      }
      skillValues_.Add(other.skillValues_);
      if (other.Star != 0) {
        Star = other.Star;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StaffId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            diamondRecruitNum_.AddEntriesFrom(input, _repeated_diamondRecruitNum_codec);
            break;
          }
          case 24: {
            ExtraItem = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            favoriteShop_.AddEntriesFrom(input, _repeated_favoriteShop_codec);
            break;
          }
          case 50:
          case 48: {
            likeRecruitNum_.AddEntriesFrom(input, _repeated_likeRecruitNum_codec);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            SkillType = input.ReadInt32();
            break;
          }
          case 72: {
            Star = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            fragments_.AddEntriesFrom(input, _repeated_fragments_codec);
            break;
          }
          case 90:
          case 88: {
            levels_.AddEntriesFrom(input, _repeated_levels_codec);
            break;
          }
          case 98:
          case 101: {
            skillValues_.AddEntriesFrom(input, _repeated_skillValues_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StaffConf : pb::IMessage<StaffConf> {
    private static readonly pb::MessageParser<StaffConf> _parser = new pb::MessageParser<StaffConf>(() => new StaffConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StaffConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::rawdata.StaffConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffConf(StaffConf other) : this() {
      staffMap_ = other.staffMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffConf Clone() {
      return new StaffConf(this);
    }

    /// <summary>Field number for the "StaffMap" field.</summary>
    public const int StaffMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::rawdata.Staff>.Codec _map_staffMap_codec
        = new pbc::MapField<int, global::rawdata.Staff>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::rawdata.Staff.Parser), 10);
    private readonly pbc::MapField<int, global::rawdata.Staff> staffMap_ = new pbc::MapField<int, global::rawdata.Staff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::rawdata.Staff> StaffMap {
      get { return staffMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StaffConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StaffConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!StaffMap.Equals(other.StaffMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= StaffMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      staffMap_.WriteTo(output, _map_staffMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += staffMap_.CalculateSize(_map_staffMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StaffConf other) {
      if (other == null) {
        return;
      }
      staffMap_.Add(other.staffMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            staffMap_.AddEntriesFrom(input, _map_staffMap_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
