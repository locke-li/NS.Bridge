// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dbstate/payment.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dbstate {

  /// <summary>Holder for reflection information generated from dbstate/payment.proto</summary>
  public static partial class PaymentReflection {

    #region Descriptor
    /// <summary>File descriptor for dbstate/payment.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaymentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVkYnN0YXRlL3BheW1lbnQucHJvdG8SB2Ric3RhdGUaGWdhbWVraXRkYXRh",
            "L3BheW1lbnQucHJvdG8iyAEKB1BheW1lbnQSCwoDVGlkGAEgASgJEg4KBlVz",
            "ZXJJZBgCIAEoBBIqCgZzdGF0dXMYAyABKA4yGi5nYW1la2l0ZGF0YS5QYXlt",
            "ZW50U3RhdHVzEhAKCGN1cnJlbmN5GAQgASgJEhIKCmFtb3VudENlbnQYBSAB",
            "KAQSFAoMVkN1cnJlbmN5S2V5GAYgASgJEhAKCFBhaWRUaW1lGAcgASgEEhAK",
            "CFBhaWRUeXBlGAggASgJEhQKDFRocm91Z2hDYXJnbxgJIAEoCUI9WjtiaXRi",
            "dWNrZXQub3JnL2Z1bnBsdXMvc2hvcHBpbmctbWFsbC1kYXRhL2dlbi9nb2xh",
            "bmcvZGJzdGF0ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gamekitdata.PaymentReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dbstate.Payment), global::Dbstate.Payment.Parser, new[]{ "Tid", "UserId", "Status", "Currency", "AmountCent", "VCurrencyKey", "PaidTime", "PaidType", "ThroughCargo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// @Entry @NoCache
  /// </summary>
  public sealed partial class Payment : pb::IMessage<Payment> {
    private static readonly pb::MessageParser<Payment> _parser = new pb::MessageParser<Payment>(() => new Payment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dbstate.PaymentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment(Payment other) : this() {
      tid_ = other.tid_;
      userId_ = other.userId_;
      status_ = other.status_;
      currency_ = other.currency_;
      amountCent_ = other.amountCent_;
      vCurrencyKey_ = other.vCurrencyKey_;
      paidTime_ = other.paidTime_;
      paidType_ = other.paidType_;
      throughCargo_ = other.throughCargo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment Clone() {
      return new Payment(this);
    }

    /// <summary>Field number for the "Tid" field.</summary>
    public const int TidFieldNumber = 1;
    private string tid_ = "";
    /// <summary>
    /// @Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tid {
      get { return tid_; }
      set {
        tid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    /// <summary>
    /// @Index @Hint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Gamekitdata.PaymentStatus status_ = global::Gamekitdata.PaymentStatus.Paid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gamekitdata.PaymentStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 4;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amountCent" field.</summary>
    public const int AmountCentFieldNumber = 5;
    private ulong amountCent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AmountCent {
      get { return amountCent_; }
      set {
        amountCent_ = value;
      }
    }

    /// <summary>Field number for the "VCurrencyKey" field.</summary>
    public const int VCurrencyKeyFieldNumber = 6;
    private string vCurrencyKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VCurrencyKey {
      get { return vCurrencyKey_; }
      set {
        vCurrencyKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaidTime" field.</summary>
    public const int PaidTimeFieldNumber = 7;
    private ulong paidTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PaidTime {
      get { return paidTime_; }
      set {
        paidTime_ = value;
      }
    }

    /// <summary>Field number for the "PaidType" field.</summary>
    public const int PaidTypeFieldNumber = 8;
    private string paidType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaidType {
      get { return paidType_; }
      set {
        paidType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThroughCargo" field.</summary>
    public const int ThroughCargoFieldNumber = 9;
    private string throughCargo_ = "";
    /// <summary>
    /// @Blob
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThroughCargo {
      get { return throughCargo_; }
      set {
        throughCargo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tid != other.Tid) return false;
      if (UserId != other.UserId) return false;
      if (Status != other.Status) return false;
      if (Currency != other.Currency) return false;
      if (AmountCent != other.AmountCent) return false;
      if (VCurrencyKey != other.VCurrencyKey) return false;
      if (PaidTime != other.PaidTime) return false;
      if (PaidType != other.PaidType) return false;
      if (ThroughCargo != other.ThroughCargo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tid.Length != 0) hash ^= Tid.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Status != global::Gamekitdata.PaymentStatus.Paid) hash ^= Status.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (AmountCent != 0UL) hash ^= AmountCent.GetHashCode();
      if (VCurrencyKey.Length != 0) hash ^= VCurrencyKey.GetHashCode();
      if (PaidTime != 0UL) hash ^= PaidTime.GetHashCode();
      if (PaidType.Length != 0) hash ^= PaidType.GetHashCode();
      if (ThroughCargo.Length != 0) hash ^= ThroughCargo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tid);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (Status != global::Gamekitdata.PaymentStatus.Paid) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Currency);
      }
      if (AmountCent != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(AmountCent);
      }
      if (VCurrencyKey.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VCurrencyKey);
      }
      if (PaidTime != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(PaidTime);
      }
      if (PaidType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PaidType);
      }
      if (ThroughCargo.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ThroughCargo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tid);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Status != global::Gamekitdata.PaymentStatus.Paid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (AmountCent != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AmountCent);
      }
      if (VCurrencyKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VCurrencyKey);
      }
      if (PaidTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PaidTime);
      }
      if (PaidType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaidType);
      }
      if (ThroughCargo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThroughCargo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payment other) {
      if (other == null) {
        return;
      }
      if (other.Tid.Length != 0) {
        Tid = other.Tid;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Status != global::Gamekitdata.PaymentStatus.Paid) {
        Status = other.Status;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.AmountCent != 0UL) {
        AmountCent = other.AmountCent;
      }
      if (other.VCurrencyKey.Length != 0) {
        VCurrencyKey = other.VCurrencyKey;
      }
      if (other.PaidTime != 0UL) {
        PaidTime = other.PaidTime;
      }
      if (other.PaidType.Length != 0) {
        PaidType = other.PaidType;
      }
      if (other.ThroughCargo.Length != 0) {
        ThroughCargo = other.ThroughCargo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tid = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            Status = (global::Gamekitdata.PaymentStatus) input.ReadEnum();
            break;
          }
          case 34: {
            Currency = input.ReadString();
            break;
          }
          case 40: {
            AmountCent = input.ReadUInt64();
            break;
          }
          case 50: {
            VCurrencyKey = input.ReadString();
            break;
          }
          case 56: {
            PaidTime = input.ReadUInt64();
            break;
          }
          case 66: {
            PaidType = input.ReadString();
            break;
          }
          case 74: {
            ThroughCargo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
